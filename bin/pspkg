#!/usr/bin/env bash

# pspkg version 1.0.0
# 
# (C) 2015 Kikyou Akino <bellflower@web4u.jp>
# 
# This software is released under the MIT License.
# http://opensource.org/licenses/mit-license.php

set -eu

PROGNAME=$(basename $0)
VERSION=1.0.0
SINCE=2015
PSPKGDIR=$HOME/.pspkg

function _g() { echo "\e[32m"; }
function _r() { echo "\e[31m"; }
function _e() { echo "\e[0m";  }

function msg() {
    printf "$(_g)%-10s$(_e) %s\n" "$@"
}
function msgn() {
    printf "$(_g)%-10s$(_e) %s" "$@"
}
function emsg() {
    printf "$(_r)%-10s$(_e) %s\n" "$@"
}

function ok() { msg '[OK]' ${1:-""}; }
function ng() { emsg '[NG]' ${1:-""}; }

function pmsg() {
    printf "$(_g)%-10s$(_e) %s\n" "$@"
}
function pmsgn() {
    printf "$(_g)%-10s$(_e) %-64s ... " "$@"
}

function log() {
    if [ "x$LOGFILE" != "x" ]; then
        dt=$(date "+%Y-%m-%d %H:%M:%S")
        echo "[$dt]" "$@" >>$LOGFILE 2>&1
    fi
}

function spinner() {
    set +e
    log "$*"
    "$@" >>$LOGFILE 2>&1 &
    local pid=$!
    local delay=0.75
    local spinstr='|/-\'
    while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do
        local temp=${spinstr#?}
        printf "[%c]" "$spinstr"
        local spinstr=$temp${spinstr%"$temp"}
        sleep $delay
        printf "\b\b\b"
    done
    wait $pid
    local ret=$?
    set -e
    if [ $ret -eq 0 ]; then
        ok
    else
        ng
        emsg ERROR: "$*"
        exit $ret
    fi
}

function init() {
    if [ ! -e $PSPKGDIR ]; then
        msgn INIT: "setup '$PSPKGDIR' ? [Y/n] "
        read ANS
        case `echo $ANS | tr y Y` in
            ""|Y*) ;;
            *) msg INIT: "setup canceled"; exit 1 ;;
        esac
    fi

    msg PSPKGDIR: $PSPKGDIR

    PSPKGDIR=${PSPKGDIR:-$HOME/.pspkg}

    [ -e $PSPKGDIR/var/log ] || mkdir -p $PSPKGDIR/var/log
    ymdhms=$(date "+%Y%m%d%H%M%S")
    LOGFILE=$PSPKGDIR/var/log/pspkg-$ymdhms-$$.log

    LOCALBASE=$PSPKGDIR
    ETCDIR=$LOCALBASE/etc
    PSPKGCONF=$ETCDIR/pspkg.conf
    PORTSNAPCONF=$ETCDIR/portsnap.conf
    MAKECONF=$ETCDIR/make.conf

    WORKDIR=$LOCALBASE/var/db/portsnap
    PORTSDIR=$LOCALBASE/ports
    RUNDIR=$LOCALBASE/var/run
    PACKAGEDIR=$LOCALBASE/packages

    MKDIR_DIRS=($ETCDIR $WORKDIR $RUNDIR $PACKAGEDIR)
    for dir in ${MKDIR_DIRS[@]}; do
        [ ! -e $dir ] && mkdir -p $dir
    done

    [ ! -e $PORTSNAPCONF ] && cat << EOD > $PORTSNAPCONF
WORKDIR=$WORKDIR
PORTSDIR=$PORTSDIR
SERVERNAME=portsnap.FreeBSD.org
KEYPRINT=9b5feee6d69f170e3dd0a2c8e469ddbd64f13f978f2f3aede40c98633216c330
INDEX INDEX-7 DESCRIBE.7
INDEX INDEX-8 DESCRIBE.8
INDEX INDEX-9 DESCRIBE.9
REFUSE arabic chinese french german hebrew hungarian korean polish portuguese
REFUSE russian ukrainian vietnamese
EOD

    [ ! -e $PSPKGCONF ] && cat << 'EOD' > $PSPKGCONF
export PREFIX=$PSPKGDIR

export INSTALL_AS_USER=yes
export DEPENDS_TARGET='package'
export LOCALBASE=$PREFIX
export PORTSDIR=$PREFIX/ports
export PKG_DBDIR=$PREFIX/var/db/pkg
export PORT_DBDIR=$PREFIX/var/db/pkg
export PKGTOOLS_CONF=$PREFIX/etc/pkgtools.conf
export SRCCONF=$PREFIX/etc/src.conf
export PKG_CONFIG_PATH=$PREFIX/libdata/pkgconfig:/usr/local/libdata/pkgconfig
export BINOWN=`whoami`
export BINGRP=`id -G -n $BINOWN`
export SHAREOWN=$BINOWN
export SHAREGRP=$BINGRP
export MANOWN=$BINOWN
export MANGRP=$BINGRP
export BINMODE=755
export SHAREMODE=644
export MANMODE=644
export SU_CMD="sh -c"
export __MAKE_CONF=$PREFIX/etc/make.conf
export LDCONFIG="ldconfig -i -f $PREFIX/var/run/ld-elf.so.hints"
export LD_LIBRARY_PATH=$PREFIX/lib:$PREFIX/lib/nss
export LD_RUN_PATH=$PREFIX/lib:$PREFIX/lib/nss
export PATH=$PREFIX/bin:$PREFIX/sbin:$PATH
export MANPATH_MAP=$PREFIX/bin:$PREFIX/man
EOD

    [ ! -e $MAKECONF ] && cat << 'EOD' > $MAKECONF
WITH_PKGNG=yes

OPTIONS_UNSET=X11 GUI

editors_vim_SET=CONSOLE
editors_vim_UNSET=GTK2

security_ca_root_nss_UNSET=ETCSYMLINK
EOD

    [ -r $PSPKGCONF ] && . $PSPKGCONF

    if [ ! -e $WORKDIR/INDEX ]; then
        pmsg PORTSNAP: fetch
        portsnap -f $PORTSNAPCONF fetch

        pmsgn PORTSNAP: extract
        spinner portsnap -f $PORTSNAPCONF extract
        pmsgn PORTSNAP: update
        spinner portsnap -f $PORTSNAPCONF update

        [ ! -e $PSPKGDIR/bin ] && mkdir -p $PSPKGDIR/bin
        cp $0 $PSPKGDIR/bin/ && :

        msg INFO: "SETUP COMPLETED"
        echo
        echo "  Make sure you have environment variables set:"
        echo
        echo "    export PSPKGDIR=$PSPKGDIR"
        echo "    source $PSPKGCONF"
        echo

        exit 0
    fi
}

function _pkginstall() {
    local target=$1

    if [ "$(pkg query %o|grep $target)" ]; then
        :
    else
        while read deppkgpath; do
            local deppkg=${deppkgpath#$PORTSDIR/}
            if [ "$(pkg query %o|grep $deppkg)" ]; then
                :
            else
                _pkginstall $deppkg
            fi
        done < <(make -C $PORTSDIR/$target all-depends-list)

        pmsgn MAKE: $target
        spinner make -C $PORTSDIR/$target BATCH=yes package

        local pkg=$(find $PORTSDIR/$target/work/pkg -type f -name *.txz)
        if [ -n "$pkg" ]; then
            pmsgn PKG_ADD: $target
            spinner pkg add $pkg
            cp $pkg $PACKAGEDIR/
        fi

        log make -C $PORTSDIR/$target BATCH=yes clean

        hash -r
    fi

    return 0
}

function pkginstall() {
    local target=$1

    if [ ! -e $LOCALBASE/sbin/pkg-static ]; then
        pmsgn INSTALL: ports-mgmt/pkg
        spinner make -C $PORTSDIR/ports-mgmt/pkg install clean
    fi

    _pkginstall $target

    msg COMPLETED: $target

    exit 0
}

function usage() {
    echo "Usage: $PROGNAME [options]"
    echo
    echo "Options:"
    echo
    echo "    --prefix PSPKGDIR"
    echo "    --update"
    echo "    --search KEYWORD"
    echo "    --install DIR/SUBDIR"
    echo "    --printenv"
    echo "    --help"
    echo "    --version"
    echo
    echo "Example:"
    echo
    echo "  Initialize:"
    echo
    echo "    # default prefix: \$PSPKGDIR (\$HOME/.pspkg)"
    msg  "    $PROGNAME"
    echo
    echo "      or"
    echo
    echo "    # manual setup"
    msg  "    $PROGNAME --prefix \$HOME/local"
    echo
    echo "    # then export PSPKGDIR"
    msg  "    export PSPKGDIR=\$HOME/local"
    echo
    echo "  Search (from ports):"
    echo
    msg  "    $PROGNAME --search foo"
    echo
    echo "  Install (build pkg and install):"
    echo
    echo "    # specify DIR/SUBDIR of \$PORTSDIR"
    msg  "    $PROGNAME --install foo/bar"
    echo
    echo "Note:"
    echo
    echo "  Make sure you have environment variables set:"
    echo
    msg  "    export PSPKGDIR=\$HOME/.pspkg"
    msg  "    source \$PSPKGDIR/etc/pspkg.conf"
    exit 1
}

function banner() {
    year=$(date +%Y)
    [ $year -gt $SINCE ] && year="-$year" || year=""
    echo "$PROGNAME, version $VERSION"
    echo "Copyright (C) $SINCE$year Kikyou Akino <bellflower@web4u.jp>"
    exit 1
}

function update() {
    #portsnap -f $PORTSNAPCONF fetch update

    pmsg PORTSNAP: fetch
    portsnap -f $PORTSNAPCONF fetch

    pmsgn PORTSNAP: update
    spinner portsnap -f $PORTSNAPCONF update
}

function printenv() {
    env
    exit 0
}

__prefix=""
__search=""
__install=""
__update=0
__printenv=0

for OPT in "$@"
do
    case $OPT in
        '--help'    ) usage ;;
        '--version' ) banner ;;
        '--prefix'  ) PSPKGDIR=$2; shift || : ;;
        '--search'  ) __search=$2; shift || : ;;
        '--install' ) __install=$2; shift || : ;;
        '--update'  ) __update=1 ;;
        '--printenv') __printenv=1 ;;
    esac
    shift || : 
done

init

if [ "x$__search" != "x" ]; then
    cd $PORTSDIR && make quicksearch name="$__search"
    exit 0
fi

if [ "x$__install" != "x" ]; then
    pkginstall $__install
    exit 0
fi

[ $__update -eq 1 ] && update

[ $__printenv -eq 1 ] && printenv
